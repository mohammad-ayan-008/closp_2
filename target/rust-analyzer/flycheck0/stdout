{"reason":"compiler-message","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused imports: `TokenType` and `Token`\n --> src/main.rs:2:19\n  |\n2 | use lexer::{Lexer,TokenType,Token};\n  |                   ^^^^^^^^^ ^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":44,"byte_start":28,"column_end":34,"column_start":18,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":18,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":23,"byte_start":22,"column_end":13,"column_start":12,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":45,"byte_start":44,"column_end":35,"column_start":34,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":34,"text":"use lexer::{Lexer,TokenType,Token};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `TokenType` and `Token`","spans":[{"byte_end":38,"byte_start":29,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":19,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":44,"byte_start":39,"column_end":34,"column_start":29,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":29,"text":"use lexer::{Lexer,TokenType,Token};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused imports: `TokenType` and `Token`\n --> src/main.rs:2:19\n  |\n2 | use lexer::{Lexer,TokenType,Token};\n  |                   ^^^^^^^^^ ^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":44,"byte_start":28,"column_end":34,"column_start":18,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":34,"highlight_start":18,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":23,"byte_start":22,"column_end":13,"column_start":12,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":45,"byte_start":44,"column_end":35,"column_start":34,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":35,"highlight_start":34,"text":"use lexer::{Lexer,TokenType,Token};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `TokenType` and `Token`","spans":[{"byte_end":38,"byte_start":29,"column_end":28,"column_start":19,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":19,"text":"use lexer::{Lexer,TokenType,Token};"}]},{"byte_end":44,"byte_start":39,"column_end":34,"column_start":29,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":2,"line_start":2,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":29,"text":"use lexer::{Lexer,TokenType,Token};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: fields `lexme`, `token_type`, and `line` are never read\n  --> src/lexer.rs:8:5\n   |\n 7 | pub struct Token{\n   |            ----- fields in this struct\n 8 |     lexme:Option<String>,\n   |     ^^^^^\n 9 |     token_type:TokenType,\n   |     ^^^^^^^^^^\n10 |     line:usize\n   |     ^^^^\n   |\n   = note: `Token` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`Token` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(dead_code)]` on by default","rendered":null,"spans":[]}],"code":{"code":"dead_code","explanation":null},"level":"warning","message":"fields `lexme`, `token_type`, and `line` are never read","spans":[{"byte_end":113,"byte_start":108,"column_end":17,"column_start":12,"expansion":null,"file_name":"src/lexer.rs","is_primary":false,"label":"fields in this struct","line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":12,"text":"pub struct Token{"}]},{"byte_end":124,"byte_start":119,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    lexme:Option<String>,"}]},{"byte_end":155,"byte_start":145,"column_end":15,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":5,"text":"    token_type:TokenType,"}]},{"byte_end":175,"byte_start":171,"column_end":9,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":9,"highlight_start":5,"text":"    line:usize"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: fields `lexme`, `token_type`, and `line` are never read\n  --> src/lexer.rs:8:5\n   |\n 7 | pub struct Token{\n   |            ----- fields in this struct\n 8 |     lexme:Option<String>,\n   |     ^^^^^\n 9 |     token_type:TokenType,\n   |     ^^^^^^^^^^\n10 |     line:usize\n   |     ^^^^\n   |\n   = note: `Token` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`Token` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(dead_code)]` on by default","rendered":null,"spans":[]}],"code":{"code":"dead_code","explanation":null},"level":"warning","message":"fields `lexme`, `token_type`, and `line` are never read","spans":[{"byte_end":113,"byte_start":108,"column_end":17,"column_start":12,"expansion":null,"file_name":"src/lexer.rs","is_primary":false,"label":"fields in this struct","line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":17,"highlight_start":12,"text":"pub struct Token{"}]},{"byte_end":124,"byte_start":119,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":8,"line_start":8,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    lexme:Option<String>,"}]},{"byte_end":155,"byte_start":145,"column_end":15,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":5,"text":"    token_type:TokenType,"}]},{"byte_end":175,"byte_start":171,"column_end":9,"column_start":5,"expansion":null,"file_name":"src/lexer.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":9,"highlight_start":5,"text":"    line:usize"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/mohda/closp-2/target/debug/deps/libclosp_2-f8244c60c6eca4f3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/mohda/closp-2#0.1.0","manifest_path":"/home/mohda/closp-2/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"closp-2","src_path":"/home/mohda/closp-2/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/mohda/closp-2/target/debug/deps/libclosp_2-a950eb505044e710.rmeta"],"executable":null,"fresh":false}
{"reason":"build-finished","success":true}
